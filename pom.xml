<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2022 Robert Bosch Manufacturing Solutions GmbH
  ~
  ~ See the AUTHORS file(s) distributed with this work for
  ~ additional information regarding authorship.
  ~
  ~ This Source Code Form is subject to the terms of the Mozilla Public
  ~ License, v. 2.0. If a copy of the MPL was not distributed with this
  ~ file, You can obtain one at https://mozilla.org/MPL/2.0/.
  ~
  ~ SPDX-License-Identifier: MPL-2.0
  -->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.openmanufacturing</groupId>
    <artifactId>sds-aspect-model-editor-backend</artifactId>
    <name>SDS Aspect Model Editor - Backend</name>
    <version>DEV-SNAPSHOT</version>
    <packaging>jar</packaging>

    <description>OMP SDS Aspect Model Editor Backend</description>
    <licenses>
        <license>
            <name>MPL-2.0</name>
            <url>https://www.mozilla.org/en-US/MPL/2.0/</url>
        </license>
    </licenses>
    <developers>
        <developer>
            <name>Semantic Data Structuring Working Group</name>
            <email>artifacts@open-manufacturing.org</email>
            <organization>Open Manufacturing Platform</organization>
            <organizationUrl>https://open-manufacturing.org</organizationUrl>
        </developer>
    </developers>
    <scm>
        <url>https://github.com/OpenManufacturingPlatform/sds-aspect-model-editor-backend</url>
    </scm>

    <properties>
        <os.platform></os.platform>
        <main.class>io.openmanufacturing.ame.Application</main.class>

        <!-- Internal sds dependencies -->
        <sds-sdk-version>2.0.6</sds-sdk-version>

        <!-- Versions of third party dependencies -->
        <spring-boot-version>2.6.7</spring-boot-version>
        <lombok-version>1.18.22</lombok-version>
        <commons-io-version>2.11.0</commons-io-version>
        <commons-validator-version>1.7</commons-validator-version>
        <port-allocator-version>1.2</port-allocator-version>
        <process-exec-version>0.9</process-exec-version>
        <mockito-inline-version>4.1.0</mockito-inline-version>
        <cglib-version>3.3.0</cglib-version>
        <classworlds-version>1.1</classworlds-version>
        <spring-aot-version>0.12.0</spring-aot-version>
        <spring-native-version>0.12.0</spring-native-version>
        <graal-svm-version>22.1.0.1</graal-svm-version>

        <!-- Required for building a native image -->
        <org-osgi-service-cm-version>1.6.1</org-osgi-service-cm-version>
        <org-eclipse-osgi-version>3.17.200</org-eclipse-osgi-version>
        <joda-time-version>2.10.13</joda-time-version>
        <javax-money-version>1.0.3</javax-money-version>
        <gson-version>2.9.0</gson-version>
        <javax-json-bind-api-version>1.0</javax-json-bind-api-version>

        <!-- Versions of plugins -->
        <junit-version>4.13.2</junit-version>
        <npm-version>8.5.0</npm-version>
        <newman-version>5.2.0</newman-version>
        <node-version>16.14.2</node-version>
        <exec-maven-plugin-version>3.0.0</exec-maven-plugin-version>
        <maven-antrun-plugin-version>3.0.0</maven-antrun-plugin-version>
        <build-helper-maven-plugin-version>3.3.0</build-helper-maven-plugin-version>
        <maven-site-plugin-version>3.10.0</maven-site-plugin-version>
        <maven-resources-plugin-version>3.2.0</maven-resources-plugin-version>
        <maven-compiler-plugin-version>3.10.0</maven-compiler-plugin-version>
        <maven-surefire-report-plugin-version>2.22.2</maven-surefire-report-plugin-version>
        <maven-scm-plugin-version>1.12.2</maven-scm-plugin-version>
        <jacoco-maven-plugin-version>0.8.7</jacoco-maven-plugin-version>
        <maven-surefire-plugin-version>2.22.2</maven-surefire-plugin-version>
        <cyclonedx-maven-plugin-version>1.4.1</cyclonedx-maven-plugin-version>
        <frontend-maven-plugin-version>1.12.1</frontend-maven-plugin-version>
        <native-image-maven-plugin-version>21.2.0</native-image-maven-plugin-version>

        <!-- General settings -->
        <postman.directory>postman</postman.directory>
        <testreports.directory>test-reports</testreports.directory>
        <testreports.surefire>surefire-report</testreports.surefire>
        <testreports.newman>newman-report.html</testreports.newman>
        <skip.generated.bom>false</skip.generated.bom>
        <skip.maven.surefire.report.plugin>false</skip.maven.surefire.report.plugin>
        <skip.generate.report.css>false</skip.generate.report.css>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Your node path must be entered here -->
        <node.path>${project.build.directory}/node/node</node.path>

        <postman.test.environment>ame.postman_environment.json</postman.test.environment>
        <postman.test.collection>ame.postman_collection.json</postman.test.collection>

        <java.version>11</java.version>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>

        <sonar.coverage.jacoco.xmlReportPaths>
            ${project.basedir}/target/site/jacoco-aggregate/jacoco.xml
        </sonar.coverage.jacoco.xmlReportPaths>
    </properties>

    <dependencies>
        <!-- Internal projects -->
        <dependency>
            <groupId>io.openmanufacturing</groupId>
            <artifactId>sds-aspect-model-urn</artifactId>
            <version>${sds-sdk-version}</version>
        </dependency>
        <dependency>
            <groupId>io.openmanufacturing</groupId>
            <artifactId>sds-aspect-meta-model-interface</artifactId>
            <version>${sds-sdk-version}</version>
        </dependency>
        <dependency>
            <groupId>io.openmanufacturing</groupId>
            <artifactId>sds-aspect-meta-model-version-migrator</artifactId>
            <version>${sds-sdk-version}</version>
        </dependency>
        <dependency>
            <groupId>io.openmanufacturing</groupId>
            <artifactId>sds-aspect-meta-model-resolver</artifactId>
            <version>${sds-sdk-version}</version>
        </dependency>
        <dependency>
            <groupId>io.openmanufacturing</groupId>
            <artifactId>sds-aspect-model-resolver</artifactId>
            <version>${sds-sdk-version}</version>
        </dependency>
        <dependency>
            <groupId>io.openmanufacturing</groupId>
            <artifactId>sds-aspect-meta-model-types</artifactId>
            <version>${sds-sdk-version}</version>
        </dependency>
        <dependency>
            <groupId>io.openmanufacturing</groupId>
            <artifactId>sds-aspect-meta-model-java</artifactId>
            <version>${sds-sdk-version}</version>
        </dependency>
        <dependency>
            <groupId>io.openmanufacturing</groupId>
            <artifactId>sds-aspect-model-document-generators</artifactId>
            <version>${sds-sdk-version}</version>
        </dependency>
        <dependency>
            <groupId>io.openmanufacturing</groupId>
            <artifactId>sds-aspect-model-validator</artifactId>
            <version>${sds-sdk-version}</version>
        </dependency>
        <dependency>
            <groupId>io.openmanufacturing</groupId>
            <artifactId>sds-aspect-model-java-generator</artifactId>
            <version>${sds-sdk-version}</version>
        </dependency>
        <dependency>
            <groupId>io.openmanufacturing</groupId>
            <artifactId>sds-aspect-model-starter</artifactId>
            <version>${sds-sdk-version}</version>
        </dependency>
        <dependency>
            <groupId>io.openmanufacturing</groupId>
            <artifactId>sds-aspect-static-meta-model-java</artifactId>
            <version>${sds-sdk-version}</version>
        </dependency>
        <dependency>
            <groupId>io.openmanufacturing</groupId>
            <artifactId>sds-aspect-model-java-core</artifactId>
            <version>${sds-sdk-version}</version>
        </dependency>
        <dependency>
            <groupId>io.openmanufacturing</groupId>
            <artifactId>sds-aspect-model-serializer</artifactId>
            <version>${sds-sdk-version}</version>
        </dependency>
        <dependency>
            <groupId>io.openmanufacturing</groupId>
            <artifactId>sds-aspect-model-jackson</artifactId>
            <version>${sds-sdk-version}</version>
        </dependency>
        <dependency>
            <groupId>io.openmanufacturing</groupId>
            <artifactId>sds-test-aspect-models</artifactId>
            <version>${sds-sdk-version}</version>
        </dependency>
        <dependency>
            <groupId>io.openmanufacturing</groupId>
            <artifactId>sds-test-resources</artifactId>
            <version>${sds-sdk-version}</version>
        </dependency>

        <!-- Third party dependencies for developing-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring-boot-version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-to-slf4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
            <version>${spring-boot-version}</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok-version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.experimental</groupId>
            <artifactId>spring-aot</artifactId>
            <version>${spring-aot-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.experimental</groupId>
            <artifactId>spring-native</artifactId>
            <version>${spring-native-version}</version>
        </dependency>

        <!-- Required for GraalVM build: Annotations for substitution classes -->
        <dependency>
            <groupId>org.graalvm.nativeimage</groupId>
            <artifactId>svm</artifactId>
            <version>${graal-svm-version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Third party dependencies for testing -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${spring-boot-version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-test</artifactId>
            <version>${spring-boot-version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>port-allocator-maven-plugin</artifactId>
            <version>${port-allocator-version}</version>
            <exclusions>
                <exclusion>
                    <groupId>classworlds</groupId>
                    <artifactId>classworlds</artifactId>
                </exclusion>
            </exclusions>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.bazaarvoice.maven.plugins</groupId>
            <artifactId>process-exec-maven-plugin</artifactId>
            <version>${process-exec-version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <version>${mockito-inline-version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>${cglib-version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit-version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${exec-maven-plugin-version}</version>
                <configuration>
                    <mainClass>${main.class}</mainClass>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-scm-plugin</artifactId>
                <version>${maven-scm-plugin-version}</version>
                <configuration>
                    <tag>${project.version}</tag>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin-version}</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin-version}</version>
                <configuration>
                    <release>11</release>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${build-helper-maven-plugin-version}</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <sources>
                                <source>./source</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin-version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <!-- Use the older JUnit 4 provider -->
                        <artifactId>surefire-junit4</artifactId>
                        <version>2.22.2</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <skip>false</skip>
                    <reportsDirectory>${project.build.directory}/${testreports.surefire}</reportsDirectory>
                    <includes>
                        <include>**/*Tests.java</include>
                        <include>**/*Test.java</include>
                    </includes>
                </configuration>
            </plugin>
            <!-- Configure generation of surefire and failsafe reports -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${maven-surefire-report-plugin-version}</version>
                <configuration>
                    <outputDirectory>${project.build.directory}/${testreports.directory}</outputDirectory>
                    <showSuccess>true</showSuccess>
                    <aggregate>false</aggregate>
                    <linkXRef>false</linkXRef>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-aggregate-surefire-report</id>
                        <phase>verify</phase>
                        <configuration>
                            <outputName>${testreports.surefire}</outputName>
                            <reportsDirectories>
                                <reportsDirectory>
                                    ${project.build.directory}/${testreports.surefire}
                                </reportsDirectory>
                            </reportsDirectories>
                        </configuration>
                        <goals>
                            <goal>report-only</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>generate-aggregate-failsafe-report</id>
                        <phase>verify</phase>
                        <configuration>
                            <outputName>${testreports.failsafe}</outputName>
                            <reportsDirectories>
                                <reportsDirectory>
                                    ${project.build.directory}/${testreports.failsafe}
                                </reportsDirectory>
                            </reportsDirectories>
                        </configuration>
                        <goals>
                            <goal>failsafe-report-only</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Configure maven-site plugin. This is required for both the correct
                settings of paths for maven-surefire-report-plugin and for the generation
                of static CSS files needed for the resulting report. -->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${maven-site-plugin-version}</version>
                <configuration>
                    <outputDirectory>${project.build.directory}/${testreports.directory}</outputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-report-css</id>
                        <phase>install</phase>
                        <configuration>
                            <generateProjectInfo>false</generateProjectInfo>
                            <generateReports>false</generateReports>
                            <generateSitemap>false</generateSitemap>
                            <generatedSiteDirectory>false</generatedSiteDirectory>
                        </configuration>
                        <goals>
                            <goal>site</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Configure generation of BOM -->
            <plugin>
                <groupId>org.cyclonedx</groupId>
                <artifactId>cyclonedx-maven-plugin</artifactId>
                <version>${cyclonedx-maven-plugin-version}</version>
                <configuration>
                    <skip>${skip.generated.bom}</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>build-bom</id>
                        <phase>package</phase>
                        <goals>
                            <goal>makeAggregateBom</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.springframework.experimental</groupId>
                <artifactId>spring-aot-maven-plugin</artifactId>
                <version>${spring-aot-version}</version>
                <executions>
                    <execution>
                        <id>test-generate</id>
                        <goals>
                            <goal>test-generate</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>generate</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>native-image</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.graalvm.nativeimage</groupId>
                        <artifactId>native-image-maven-plugin</artifactId>
                        <version>${native-image-maven-plugin-version}</version>
                        <configuration>
                            <mainClass>${main.class}</mainClass>
                            <imageName>ame-backend-${project.version}-${os.platform}</imageName>
                            <buildArgs>
                                <buildArg>-Dspring.graal.remove-unused-autoconfig=true</buildArg>
                                <buildArg>-Dspring.graal.remove-yaml-support=true</buildArg>
                                <buildArg>--no-fallback</buildArg>
                                <buildArg>--report-unsupported-elements-at-runtime</buildArg>
                                <buildArg>
                                    --initialize-at-build-time=org.apache.commons.logging.impl.SLF4JLocationAwareLog,guru.nidi.graphviz.attribute.,org.apache.velocity.
                                </buildArg>
                                <buildArg>-J-Xmx8G</buildArg>
                                <buildArg>-H:+ReportExceptionStackTraces</buildArg>
                                <buildArg>-H:ReflectionConfigurationFiles=../.graalvm/reflect-config.json</buildArg>
                                <buildArg>-H:ResourceConfigurationFiles=../.graalvm/resource-config.json</buildArg>
                            </buildArgs>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>native-image</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>${exec-maven-plugin-version}</version>
                        <executions>
                            <execution>
                                <id>Add execution rigths on native-image</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>chmod</executable>
                                    <arguments>
                                        <argument>755</argument>
                                        <argument>
                                            ${project.build.directory}/ame-backend-${project.version}-${os.platform}
                                        </argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <version>${spring-boot-version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>repackage</goal>
                                    <goal>build-info</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <mainClass>${main.class}</mainClass>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>dependencies-for-integration-tests</id>
            <build>
                <plugins>
                    <!-- Make sure newman is available -->
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <version>${frontend-maven-plugin-version}</version>
                        <executions>
                            <execution>
                                <id>install-node-and-npm</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>install-node-and-npm</goal>
                                </goals>
                                <configuration>
                                    <nodeVersion>v${node-version}</nodeVersion>
                                    <npmVersion>${npm-version}</npmVersion>
                                    <installDirectory>${project.build.directory}</installDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>install-newman</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>${project.build.directory}</workingDirectory>
                                    <arguments>install . newman@${newman-version}</arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>install-newman-reports</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>${project.build.directory}</workingDirectory>
                                    <arguments>install newman-reporter-htmlextra</arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Copy Postman files into build directory.
                                       This is required so that the target URL may be dynamically
                                       replaced within the Postman environment. -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>${maven-resources-plugin-version}</version>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.outputDirectory}/${postman.directory}
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${postman.directory}</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>port-allocator-maven-plugin</artifactId>
                        <version>${port-allocator-version}</version>
                        <dependencies>
                            <dependency>
                                <groupId>classworlds</groupId>
                                <artifactId>classworlds</artifactId>
                                <version>${classworlds-version}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>allocate-ports</goal>
                                </goals>
                                <configuration>
                                    <ports>
                                        <port>
                                            <name>integration-test-port</name>
                                        </port>
                                    </ports>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>${maven-antrun-plugin-version}</version>
                        <executions>
                            <!-- Adjust Postman environment target URL -->
                            <execution>
                                <id>adjust-postman-target-url</id>
                                <phase>pre-integration-test</phase>
                                <configuration>
                                    <target>
                                        <replaceregexp
                                                file="${project.build.outputDirectory}/${postman.directory}/${postman.test.environment}"
                                                match="9091" replace="${integration-test-port}" byline="true"/>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>start-windows-native-image-for-integration-tests</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.bazaarvoice.maven.plugins</groupId>
                        <artifactId>process-exec-maven-plugin</artifactId>
                        <version>${process-exec-version}</version>
                        <executions>
                            <!--Start process-->
                            <execution>
                                <id>start-native-image-process</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <workingDir>${project.build.directory}</workingDir>
                                    <arguments>
                                        <argument>cmd</argument>
                                        <argument>/C</argument>
                                        <argument>ame-backend-${project.version}-${os.platform}</argument>
                                        <argument>-Dserver.port=${integration-test-port}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <!--Stop Process-->
                            <execution>
                                <id>stop-native-image-process</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop-all</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>start-unix-native-image-for-integration-tests</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.bazaarvoice.maven.plugins</groupId>
                        <artifactId>process-exec-maven-plugin</artifactId>
                        <version>${process-exec-version}</version>
                        <executions>
                            <!--Start process-->
                            <execution>
                                <id>start-native-image-process</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <workingDir>${project.build.directory}</workingDir>
                                    <arguments>
                                        <argument>./ame-backend-${project.version}-${os.platform}</argument>
                                        <argument>-Dserver.port=${integration-test-port}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <!--Stop Process-->
                            <execution>
                                <id>stop-native-image-process</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop-all</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>run-postman-integration-tests</id>
            <build>
                <plugins>
                    <!-- Run Postman collections against deployed integration instance -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>${exec-maven-plugin-version}</version>
                        <inherited>false</inherited>
                        <executions>
                            <execution>
                                <id>run-postman-integration-tests</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${node.path}</executable>
                                    <commandlineArgs>
                                        ${project.build.directory}/node_modules/newman/bin/newman.js
                                        run
                                        ${project.build.outputDirectory}/${postman.directory}/${postman.test.collection}
                                        -e
                                        ${project.build.outputDirectory}/${postman.directory}/${postman.test.environment}
                                        -n 1
                                        --timeout-request 60000
                                        --delay-request 1000
                                        --insecure
                                        -r cli,htmlextra
                                        --reporter-htmlextra-title "${project.name} ${project.version}"
                                        --reporter-htmlextra-export
                                        ${project.build.directory}/${testreports.directory}/${testreports.newman}
                                    </commandlineArgs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>github</id>
            <name>OpenManufacturingPlatform SDS-SDK</name>
            <url>https://maven.pkg.github.com/OpenManufacturingPlatform/sds-sdk</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-release</id>
            <name>Spring release</name>
            <url>https://repo.spring.io/release</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>spring-release</id>
            <name>Spring release</name>
            <url>https://repo.spring.io/release</url>
        </pluginRepository>
    </pluginRepositories>
</project>
