<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <artifactId>aspect-model-editor-parent</artifactId>
    <groupId>org.eclipse.esmf</groupId>
    <version>DEV-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>aspect-model-editor-runtime</artifactId>
  <name>ESMF Aspect Model Editor Runtime</name>
  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <configuration>
          <mainClass>${main.class}</mainClass>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <mainClass>org.eclipse.esmf.ame.Application</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
              </filters>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <annotationProcessorPaths>
            <path>
              <groupId>io.micronaut</groupId>
              <artifactId>micronaut-http-validation</artifactId>
              <version>${micronaut.core.version}</version>
            </path>
            <path>
              <groupId>io.micronaut.serde</groupId>
              <artifactId>micronaut-serde-processor</artifactId>
              <version>${micronaut.serialization.version}</version>
            </path>
            <path>
              <groupId>io.micronaut</groupId>
              <artifactId>micronaut-inject-java</artifactId>
              <version>${micronaut.version}</version>
            </path>
            <path>
              <groupId>io.micronaut.validation</groupId>
              <artifactId>micronaut-validation-processor</artifactId>
              <version>${micronaut.validation.version}</version>
            </path>
          </annotationProcessorPaths>
          <compilerArgs>
            <arg>-Amicronaut.processing.group=org.eclipse.esmf.ame</arg>
            <arg>-Amicronaut.processing.module=aspect-model-editor</arg>
          </compilerArgs>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>copy-font-configuration</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>wagon-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-fontconfig-bfc</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>download-single</goal>
                </goals>
                <configuration>
                  <url>file://${env.JAVA_HOME}/lib</url>
                  <fromFile>fontconfig.bfc</fromFile>
                  <toFile>${project.build.outputDirectory}/fontconfig.bfc</toFile>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>native-image</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>generate-admin-shell-reflection-config</id>
                <phase>process-classes</phase>
                <goals>
                  <goal>java</goal>
                </goals>
                <configuration>
                  <mainClass>org.eclipse.esmf.ame.buildtime.Aas4jClassSetup</mainClass>
                  <arguments>
                    <argument>${project.build.outputDirectory}/adminshell.properties</argument>
                  </arguments>
                  <cleanupDaemonThreads>false</cleanupDaemonThreads>
                </configuration>
              </execution>
              <execution>
                <id>customize-resource-config</id>
                <phase>process-classes</phase>
                <goals>
                  <goal>java</goal>
                </goals>
                <configuration>
                  <mainClass>org.eclipse.esmf.ame.buildtime.CustomizeGraalVmConfigs</mainClass>
                  <arguments>
                    <argument>${native-config-path}</argument>
                  </arguments>
                  <cleanupDaemonThreads>false</cleanupDaemonThreads>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <extensions>true</extensions>
            <executions>
              <execution>
                <id>add-reachability-metadata</id>
                <goals>
                  <goal>add-reachability-metadata</goal>
                </goals>
              </execution>
              <execution>
                <id>build-native</id>
                <phase>package</phase>
                <goals>
                  <goal>compile-no-fork</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <mainClass>${main.class}</mainClass>
              <imageName>ame-backend-${project.version}-${os.platform}</imageName>
              <verbose>true</verbose>
              <buildArgs>
                <arg>--verbose</arg>
                <arg>-H:EnableURLProtocols=http,https</arg>
                <arg>--enable-https</arg>
                <arg>--no-fallback</arg>
                <arg>-H:-DeadlockWatchdogExitOnTimeout</arg>
                <arg>-H:DeadlockWatchdogInterval=0</arg>
                <arg>-H:+AddAllCharsets</arg>
                <arg>-H:+ReportExceptionStackTraces</arg>
                <arg>-J-XX:MaxRAMPercentage=90.0</arg>
                <arg>-J-XX:GCTimeRatio=19</arg>
                <arg>-J--add-exports=java.desktop/sun.awt=ALL-UNNAMED</arg>
                <arg>-J--add-exports=java.desktop/sun.font=ALL-UNNAMED</arg>
                <arg>-J--add-exports=org.graalvm.sdk/org.graalvm.nativeimage.impl=ALL-UNNAMED</arg>
                <arg>-J--add-exports=org.graalvm.nativeimage.builder/com.oracle.svm.core.configure=ALL-UNNAMED</arg>
                <arg>-J--add-exports=org.graalvm.nativeimage.builder/com.oracle.svm.core.jni=ALL-UNNAMED</arg>
                <arg>--initialize-at-run-time=io.netty</arg>
                <arg>--report-unsupported-elements-at-runtime</arg>
              </buildArgs>
              <quickBuild>true</quickBuild>
              <classpath>
                <param>${project.build.directory}/${native-image-jar}.jar</param>
              </classpath>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>dependencies-for-integration-tests</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>install-node-and-npm</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>install-node-and-npm</goal>
                </goals>
                <configuration>
                  <nodeVersion>v${node-version}</nodeVersion>
                  <npmVersion>${npm-version}</npmVersion>
                  <installDirectory>${project.build.directory}</installDirectory>
                </configuration>
              </execution>
              <execution>
                <id>install-newman</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>npm</goal>
                </goals>
                <configuration>
                  <workingDirectory>${project.build.directory}</workingDirectory>
                  <arguments>install . newman@${newman-version}</arguments>
                </configuration>
              </execution>
              <execution>
                <id>install-newman-reports</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>npm</goal>
                </goals>
                <configuration>
                  <workingDirectory>${project.build.directory}</workingDirectory>
                  <arguments>install newman-reporter-htmlextra</arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-resources</id>
                <phase>process-test-resources</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.outputDirectory}/${postman.directory}</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${postman.directory}</directory>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>port-allocator-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>allocate-ports</goal>
                </goals>
                <configuration>
                  <ports>
                    <port>
                      <name>integration-test-port</name>
                    </port>
                  </ports>
                </configuration>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>classworlds</groupId>
                <artifactId>classworlds</artifactId>
                <version>${classworlds-version}</version>
              </dependency>
            </dependencies>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>adjust-postman-target-url</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <replaceregexp />
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>start-windows-native-image-for-integration-tests</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.bazaarvoice.maven.plugins</groupId>
            <artifactId>process-exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>start-native-image-process</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
                <configuration>
                  <workingDir>${project.build.directory}</workingDir>
                  <arguments>
                    <argument>cmd</argument>
                    <argument>/C</argument>
                    <argument>ame-backend-${project.version}-${os.platform}</argument>
                    <argument>-Dserver.port=${integration-test-port}</argument>
                  </arguments>
                </configuration>
              </execution>
              <execution>
                <id>stop-native-image-process</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop-all</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>start-unix-native-image-for-integration-tests</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>Add execution right´s on native-image</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>chmod</executable>
                  <arguments>
                    <argument>755</argument>
                    <argument>${project.build.directory}/ame-backend-${project.version}-${os.platform}</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>io.micronaut.maven</groupId>
            <artifactId>micronaut-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>run</id>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <mainClass>${main.class}</mainClass>
            </configuration>
          </plugin>
          <plugin>
            <groupId>com.bazaarvoice.maven.plugins</groupId>
            <artifactId>process-exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>start-native-image-process</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
                <configuration>
                  <workingDir>${project.build.directory}</workingDir>
                  <arguments>
                    <argument>./ame-backend-${project.version}-${os.platform}</argument>
                    <argument>-Dserver.port=${integration-test-port}</argument>
                  </arguments>
                </configuration>
              </execution>
              <execution>
                <id>stop-native-image-process</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop-all</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>run-postman-integration-tests</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>run-postman-integration-tests</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>${node.path}</executable>
                  <commandlineArgs>${project.build.directory}/node_modules/newman/bin/newman.js
                              run
                              ${project.build.outputDirectory}/${postman.directory}/${postman.test.collection}
                              -e
                              ${project.build.outputDirectory}/${postman.directory}/${postman.test.environment}
                              -n 1
                              --timeout-request 60000
                              --delay-request 1000
                              --insecure
                              -r cli,htmlextra
                              --reporter-htmlextra-title "${project.name} ${project.version}"
                              --reporter-htmlextra-export
                              ${project.build.directory}/${testreports.directory}/${testreports.newman}</commandlineArgs>
                </configuration>
              </execution>
            </executions>
            <inherited>false</inherited>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <dependencies>
    <dependency>
      <groupId>org.graalvm.sdk</groupId>
      <artifactId>graal-sdk</artifactId>
      <version>23.1.3</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.graalvm.truffle</groupId>
      <artifactId>truffle-api</artifactId>
      <version>23.1.3</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>
  <properties>
    <micronaut.aot.enabled>true</micronaut.aot.enabled>
    <main.class>org.eclipse.esmf.ame.Application</main.class>
    <native-config-path>${project.basedir}/../${relative-native-config-path}</native-config-path>
    <micronaut.io.watch>false</micronaut.io.watch>
    <integration-test-port>5001</integration-test-port>
    <relative-native-config-path>aspect-model-editor-runtime/target/classes/META-INF/native-image</relative-native-config-path>
    <native-image-jar>${project.artifactId}-${project.version}</native-image-jar>
  </properties>
</project>
