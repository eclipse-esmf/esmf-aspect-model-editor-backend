[
  {
    "name": "[B"
  },
  {
    "name": "[I"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.BeanDeserializerModifier;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.ser.Serializers;"
  },
  {
    "name": "[Ljava.io.Serializable;"
  },
  {
    "name": "[Ljava.lang.CharSequence;"
  },
  {
    "name": "[Ljava.lang.Class;"
  },
  {
    "name": "[Ljava.lang.Comparable;"
  },
  {
    "name": "[Ljava.lang.Object;"
  },
  {
    "name": "[Ljava.lang.String;"
  },
  {
    "name": "[Ljava.lang.annotation.Annotation;"
  },
  {
    "name": "[Ljava.lang.constant.Constable;"
  },
  {
    "name": "[Ljava.lang.constant.ConstantDesc;"
  },
  {
    "name": "[Ljava.math.BigDecimal;"
  },
  {
    "name": "[Lorg.graphper.layout.dot.DNode;"
  },
  {
    "name": "[Lorg.springframework.boot.context.config.ConfigDataLocation;"
  },
  {
    "name": "[Lorg.springframework.core.annotation.AnnotationAttributes;"
  },
  {
    "name": "[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"
  },
  {
    "name": "[Lorg.springframework.web.bind.annotation.RequestMethod;"
  },
  {
    "name": "[Z"
  },
  {
    "name": "boolean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "ch.qos.logback.classic.LoggerContext"
  },
  {
    "name": "ch.qos.logback.classic.pattern.DateConverter",
    "allDeclaredMethods": true
  },
  {
    "name": "ch.qos.logback.classic.pattern.LevelConverter",
    "allDeclaredMethods": true
  },
  {
    "name": "ch.qos.logback.classic.pattern.LineSeparatorConverter",
    "allDeclaredMethods": true
  },
  {
    "name": "ch.qos.logback.classic.pattern.LoggerConverter",
    "allDeclaredMethods": true
  },
  {
    "name": "ch.qos.logback.classic.pattern.MessageConverter",
    "allDeclaredMethods": true
  },
  {
    "name": "ch.qos.logback.classic.pattern.ThreadConverter",
    "allDeclaredMethods": true
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.DateTokenConverter",
    "allDeclaredMethods": true
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.IntegerTokenConverter",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JacksonAnnotation",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonIgnoreProperties",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonInclude",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonInclude$Include",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonProperty",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.core.JsonGenerator",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.core.ObjectCodec",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.core.TreeCodec",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.core.Versioned",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.Module",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ObjectMapper",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ext.CoreXMLSerializers",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ext.Java7HandlersImpl",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.module.SimpleModule",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.dataformat.xml.XmlMapper",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "_nextName"
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.github.benmanes.caffeine.cache.BBHeader$ReadAndWriteCounterRef",
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "writeCounter"
      }
    ]
  },
  {
    "name": "com.github.benmanes.caffeine.cache.BBHeader$ReadCounterRef",
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "readCounter"
      }
    ]
  },
  {
    "name": "com.github.benmanes.caffeine.cache.BLCHeader$DrainStatusRef",
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "drainStatus"
      }
    ]
  },
  {
    "name": "com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueColdProducerFields",
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "producerLimit"
      }
    ]
  },
  {
    "name": "com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueConsumerFields",
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "consumerIndex"
      }
    ]
  },
  {
    "name": "com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueProducerFields",
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "producerIndex"
      }
    ]
  },
  {
    "name": "com.github.benmanes.caffeine.cache.BoundedLocalCache",
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "refreshes"
      }
    ]
  },
  {
    "name": "com.github.benmanes.caffeine.cache.Caffeine",
    "allDeclaredMethods": true
  },
  {
    "name": "com.github.benmanes.caffeine.cache.PS",
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "key"
      },
      {
        "name": "value"
      }
    ]
  },
  {
    "name": "com.github.benmanes.caffeine.cache.PSMS",
    "allDeclaredMethods": true
  },
  {
    "name": "com.github.benmanes.caffeine.cache.SSMS",
    "allDeclaredMethods": true
  },
  {
    "name": "com.github.benmanes.caffeine.cache.StripedBuffer",
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "tableBusy"
      }
    ]
  },
  {
    "name": "com.github.jsonldjava.core.JsonLdProcessor"
  },
  {
    "name": "com.github.marschall.memoryfilesystem.FileSystemContext",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.github.marschall.memoryfilesystem.MemoryFileSystem",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.google.gson.Gson",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.google.gson.GsonBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.oracle.svm.core.annotate.KeepOriginal",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.oracle.svm.core.annotate.Substitute",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.oracle.svm.core.annotate.TargetClass",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.sun.crypto.provider.AESCipher$General",
    "allDeclaredMethods": true
  },
  {
    "name": "com.sun.crypto.provider.ARCFOURCipher",
    "allDeclaredMethods": true
  },
  {
    "name": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
    "allDeclaredMethods": true
  },
  {
    "name": "com.sun.crypto.provider.DESCipher",
    "allDeclaredMethods": true
  },
  {
    "name": "com.sun.crypto.provider.DESedeCipher",
    "allDeclaredMethods": true
  },
  {
    "name": "com.sun.crypto.provider.DHParameters",
    "allDeclaredMethods": true
  },
  {
    "name": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
    "allDeclaredMethods": true
  },
  {
    "name": "com.sun.crypto.provider.PBKDF2Core$HmacSHA256",
    "allDeclaredMethods": true
  },
  {
    "name": "com.sun.crypto.provider.TlsMasterSecretGenerator",
    "allDeclaredMethods": true
  },
  {
    "name": "com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl",
    "allDeclaredMethods": true
  },
  {
    "name": "com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl",
    "allDeclaredMethods": true
  },
  {
    "name": "com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
    "allDeclaredMethods": true
  },
  {
    "name": "com.sun.org.apache.xerces.internal.jaxp.datatype.DatatypeFactoryImpl",
    "allDeclaredMethods": true
  },
  {
    "name": "com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true

  },
  {
    "name": "io.vavr.control.Try",
    "allDeclaredMethods": true

  },
  {
    "name": "jakarta.activation.MimeType",
    "allDeclaredMethods": true

  },
  {
    "name": "jakarta.annotation.ManagedBean",
    "allDeclaredMethods": true

  },
  {
    "name": "jakarta.annotation.PostConstruct",
    "allDeclaredMethods": true

  },
  {
    "name": "jakarta.annotation.PreDestroy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.servlet.Filter",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true

  },
  {
    "name": "jakarta.servlet.GenericFilter",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "jakarta.servlet.GenericServlet",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "jakarta.servlet.MultipartConfigElement",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "jakarta.servlet.Servlet",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "jakarta.servlet.ServletConfig",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "jakarta.servlet.ServletContext",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "jakarta.servlet.ServletRegistration",
    "allDeclaredMethods": true
  },
  {
    "name": "jakarta.servlet.ServletRequest",
    "allDeclaredMethods": true
  },
  {
    "name": "jakarta.servlet.http.HttpServlet",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "jakarta.servlet.http.PushBuilder",
    "allDeclaredMethods": true
  },
  {
    "name": "jakarta.validation.Validator",
    "allDeclaredMethods": true
  },
  {
    "name": "jakarta.validation.ValidatorFactory",
    "allDeclaredMethods": true
  },
  {
    "name": "jakarta.validation.bootstrap.GenericBootstrap",
    "allDeclaredMethods": true
  },
  {
    "name": "jakarta.validation.executable.ExecutableValidator",
    "allDeclaredMethods": true
  },
  {
    "name": "jakarta.websocket.server.ServerContainer",
    "allDeclaredMethods": true
  },
  {
    "name": "jakarta.xml.bind.Binder",
    "allDeclaredMethods": true
  },
  {
    "name": "java.awt.Canvas",
    "allDeclaredMethods": true
  },
  {
    "name": "java.awt.Component",
    "allDeclaredMethods": true
  },
  {
    "name": "java.awt.Font",
    "allDeclaredMethods": true
  },
  {
    "name": "java.io.Closeable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.io.File",
    "allDeclaredMethods": true
  },
  {
    "name": "java.io.FilePermission",
    "allDeclaredMethods": true
  },
  {
    "name": "java.io.Serializable",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.AutoCloseable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.CharSequence",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.Class",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.ClassLoader",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.Cloneable",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.Comparable",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.Enum",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.Iterable",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.Module",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.ModuleLayer",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.Object",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.RuntimePermission",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.StackWalker",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.StackWalker$Option",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.StackWalker$StackFrame",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.String",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.Void",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.annotation.Documented",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.annotation.Inherited",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.annotation.Repeatable",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.annotation.Retention",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.annotation.Target",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.constant.Constable",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.constant.ConstantDesc",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.invoke.TypeDescriptor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.invoke.TypeDescriptor$OfField",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.management.ManagementFactory",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.management.RuntimeMXBean",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.module.Configuration",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.module.ModuleDescriptor",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.module.ModuleReader",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.module.ModuleReference",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.module.ResolvedModule",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.reflect.AnnotatedElement",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.reflect.GenericDeclaration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.reflect.ParameterizedType",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.reflect.Type",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.reflect.TypeVariable",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.reflect.WildcardType",
    "allDeclaredMethods": true
  },
  {
    "name": "java.net.NetPermission",
    "allDeclaredMethods": true
  },
  {
    "name": "java.net.SocketPermission",
    "allDeclaredMethods": true
  },
  {
    "name": "java.net.URLClassLoader",
    "allDeclaredMethods": true
  },
  {
    "name": "java.net.URLPermission",
    "allDeclaredMethods": true
  },
  {
    "name": "java.net.UnixDomainSocketAddress",
    "allDeclaredMethods": true
  },
  {
    "name": "java.nio.channels.ServerSocketChannel",
    "allDeclaredMethods": true
  },
  {
    "name": "java.nio.channels.SocketChannel",
    "allDeclaredMethods": true
  },
  {
    "name": "java.nio.file.FileSystem",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.nio.file.Path",
    "allDeclaredMethods": true
  },
  {
    "name": "java.security.AlgorithmParametersSpi",
    "allDeclaredMethods": true
  },
  {
    "name": "java.security.AllPermission",
    "allDeclaredMethods": true
  },
  {
    "name": "java.security.KeyStoreSpi",
    "allDeclaredMethods": true
  },
  {
    "name": "java.security.SecureRandomParameters",
    "allDeclaredMethods": true
  },
  {
    "name": "java.security.SecurityPermission",
    "allDeclaredMethods": true
  },
  {
    "name": "java.sql.Date",
    "allDeclaredMethods": true
  },
  {
    "name": "java.sql.DriverManager",
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.AbstractCollection",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.AbstractList",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.AbstractSet",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.ArrayList",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.Collection",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.Enumeration",
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.HashSet",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.List",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.Optional",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.PropertyPermission",
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.RandomAccess",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.Set",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.concurrent.Callable",
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.concurrent.Executor",
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.concurrent.ThreadFactory",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.function.Consumer",
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.logging.LogManager",
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.logging.SimpleFormatter",
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.stream.Collector",
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.stream.Collectors",
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.stream.Stream",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.naming.InitialContext",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.naming.ldap.LdapContext",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.security.auth.x500.X500Principal",
    "fields": [
      {
        "name": "thisX500Name"
      }
    ],
    "allDeclaredMethods": true
  },
  {
    "name": "javax.sql.DataSource",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.xml.datatype.Duration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "nonapi.io.github.classgraph.classloaderhandler.AntClassLoaderHandler",
    "allDeclaredMethods": true
  },
  {
    "name": "nonapi.io.github.classgraph.classloaderhandler.EquinoxClassLoaderHandler",
    "allDeclaredMethods": true
  },
  {
    "name": "nonapi.io.github.classgraph.classloaderhandler.EquinoxContextFinderClassLoaderHandler",
    "allDeclaredMethods": true
  },
  {
    "name": "nonapi.io.github.classgraph.classloaderhandler.FallbackClassLoaderHandler",
    "allDeclaredMethods": true
  },
  {
    "name": "nonapi.io.github.classgraph.classloaderhandler.FelixClassLoaderHandler",
    "allDeclaredMethods": true
  },
  {
    "name": "nonapi.io.github.classgraph.classloaderhandler.JBossClassLoaderHandler",
    "allDeclaredMethods": true
  },
  {
    "name": "nonapi.io.github.classgraph.classloaderhandler.JPMSClassLoaderHandler",
    "allDeclaredMethods": true
  },
  {
    "name": "nonapi.io.github.classgraph.classloaderhandler.OSGiDefaultClassLoaderHandler",
    "allDeclaredMethods": true
  },
  {
    "name": "nonapi.io.github.classgraph.classloaderhandler.ParentLastDelegationOrderTestClassLoaderHandler",
    "allDeclaredMethods": true
  },
  {
    "name": "nonapi.io.github.classgraph.classloaderhandler.PlexusClassWorldsClassRealmClassLoaderHandler",
    "allDeclaredMethods": true
  },
  {
    "name": "nonapi.io.github.classgraph.classloaderhandler.QuarkusClassLoaderHandler",
    "allDeclaredMethods": true
  },
  {
    "name": "nonapi.io.github.classgraph.classloaderhandler.SpringBootRestartClassLoaderHandler",
    "allDeclaredMethods": true
  },
  {
    "name": "nonapi.io.github.classgraph.classloaderhandler.TomcatWebappClassLoaderBaseHandler",
    "allDeclaredMethods": true
  },
  {
    "name": "nonapi.io.github.classgraph.classloaderhandler.URLClassLoaderHandler",
    "allDeclaredMethods": true
  },
  {
    "name": "nonapi.io.github.classgraph.classloaderhandler.UnoOneJarClassLoaderHandler",
    "allDeclaredMethods": true
  },
  {
    "name": "nonapi.io.github.classgraph.classloaderhandler.WeblogicClassLoaderHandler",
    "allDeclaredMethods": true
  },
  {
    "name": "nonapi.io.github.classgraph.classloaderhandler.WebsphereLibertyClassLoaderHandler",
    "allDeclaredMethods": true
  },
  {
    "name": "nonapi.io.github.classgraph.classloaderhandler.WebsphereTraditionalClassLoaderHandler",
    "allDeclaredMethods": true
  },
  {
    "name": "nonapi.io.github.classgraph.scanspec.ScanSpec",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.catalina.connector.RequestFacade",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.catalina.core.ApplicationContextFacade",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.catalina.loader.JdbcLeakPrevention",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.catalina.loader.WebappClassLoaderBase",
    "fields": [
      {
        "name": "delegate"
      }
    ],
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.catalina.startup.Tomcat",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.catalina.util.CharsetMapper",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.commons.compress.archivers.zip.AsiExtraField",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.commons.compress.archivers.zip.JarMarker",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.commons.compress.archivers.zip.ResourceAlignmentExtraField",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.commons.compress.archivers.zip.UnicodeCommentExtraField",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.commons.compress.archivers.zip.UnicodePathExtraField",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.commons.compress.archivers.zip.X000A_NTFS",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.commons.compress.archivers.zip.X0014_X509Certificates",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.commons.compress.archivers.zip.X0015_CertificateIdForFile",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.commons.compress.archivers.zip.X0016_CertificateIdForCentralDirectory",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.commons.compress.archivers.zip.X0017_StrongEncryptionHeader",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.commons.compress.archivers.zip.X0019_EncryptionRecipientCertificateList",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.commons.compress.archivers.zip.X7875_NewUnix",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.coyote.AbstractProtocol",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.coyote.UpgradeProtocol"
  },
  {
    "name": "org.apache.coyote.http11.AbstractHttp11Protocol",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.coyote.http11.Http11NioProtocol",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.logging.log4j.spi.ExtendedLogger",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.logging.slf4j.SLF4JProvider",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.tomcat.util.net.AbstractEndpoint",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.tomcat.util.net.NioEndpoint",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.tomcat.websocket.server.WsFilter",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.tomcat.websocket.server.WsSci",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.velocity.app.event.implement.EscapeHtmlReference",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.velocity.runtime.DeprecatedRuntimeConstants",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.velocity.runtime.ParserPoolImpl",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.velocity.runtime.RuntimeConstants",
    "fields": [
      {
        "name": "CHECK_EMPTY_OBJECTS"
      },
      {
        "name": "CONTEXT_AUTOREFERENCE_KEY"
      },
      {
        "name": "CONVERSION_HANDLER_CLASS"
      },
      {
        "name": "CUSTOM_DIRECTIVES"
      },
      {
        "name": "DEFINE_DIRECTIVE_MAXDEPTH"
      },
      {
        "name": "DS_RESOURCE_LOADER_DATASOURCE"
      },
      {
        "name": "DS_RESOURCE_LOADER_KEY_COLUMN"
      },
      {
        "name": "DS_RESOURCE_LOADER_TEMPLATE_COLUMN"
      },
      {
        "name": "DS_RESOURCE_LOADER_TIMESTAMP_COLUMN"
      },
      {
        "name": "ERRORMSG_END"
      },
      {
        "name": "ERRORMSG_START"
      },
      {
        "name": "EVENTHANDLER_INCLUDE"
      },
      {
        "name": "EVENTHANDLER_INVALIDREFERENCES"
      },
      {
        "name": "EVENTHANDLER_METHODEXCEPTION"
      },
      {
        "name": "EVENTHANDLER_REFERENCEINSERTION"
      },
      {
        "name": "FILE_RESOURCE_LOADER_CACHE"
      },
      {
        "name": "FILE_RESOURCE_LOADER_PATH"
      },
      {
        "name": "INPUT_ENCODING"
      },
      {
        "name": "INTERPOLATE_STRINGLITERALS"
      },
      {
        "name": "MAX_NUMBER_LOOPS"
      },
      {
        "name": "PARSE_DIRECTIVE_MAXDEPTH"
      },
      {
        "name": "RESOURCE_LOADERS"
      },
      {
        "name": "RESOURCE_LOADER_CHECK_INTERVAL"
      },
      {
        "name": "RESOURCE_MANAGER_DEFAULTCACHE_SIZE"
      },
      {
        "name": "RESOURCE_MANAGER_LOGWHENFOUND"
      },
      {
        "name": "RUNTIME_LOG_REFERENCE_LOG_INVALID"
      },
      {
        "name": "RUNTIME_REFERENCES_STRICT"
      },
      {
        "name": "RUNTIME_REFERENCES_STRICT_ESCAPE"
      },
      {
        "name": "SKIP_INVALID_ITERATOR"
      },
      {
        "name": "SPACE_GOBBLING"
      },
      {
        "name": "STRICT_MATH"
      },
      {
        "name": "UBERSPECT_CLASSNAME"
      },
      {
        "name": "VM_BODY_REFERENCE"
      },
      {
        "name": "VM_ENABLE_BC_MODE"
      },
      {
        "name": "VM_LIBRARY"
      },
      {
        "name": "VM_LIBRARY_DEFAULT"
      },
      {
        "name": "VM_MAX_DEPTH"
      },
      {
        "name": "VM_PERM_ALLOW_INLINE"
      },
      {
        "name": "VM_PERM_ALLOW_INLINE_REPLACE_GLOBAL"
      },
      {
        "name": "VM_PERM_INLINE_LOCAL"
      }
    ],
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.velocity.runtime.directive.Break",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.velocity.runtime.directive.Define",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.velocity.runtime.directive.Evaluate",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.velocity.runtime.directive.Foreach",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.velocity.runtime.directive.Include",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.velocity.runtime.directive.Macro",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.velocity.runtime.directive.Parse",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.velocity.runtime.directive.Stop",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.velocity.runtime.parser.StandardParser",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.velocity.runtime.resource.ResourceCacheImpl",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.velocity.runtime.resource.ResourceManagerImpl",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.velocity.runtime.resource.loader.FileResourceLoader",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.velocity.util.introspection.TypeConversionHandlerImpl",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.velocity.util.introspection.UberspectImpl",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.core.serialization.EnumSerializer",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.json.mixins.AnnotatedRelationshipElementMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.json.mixins.AssetAdministrationShellMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.json.mixins.AssetInformationMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.json.mixins.BlobMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.json.mixins.ConceptDescriptionMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.json.mixins.DataSpecificationIec61360Mixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.json.mixins.EntityMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.json.mixins.EnvironmentMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.json.mixins.ExtensionMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.json.mixins.FileMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.json.mixins.HasDataSpecificationMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.json.mixins.HasExtensionsMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.json.mixins.HasSemanticsMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.json.mixins.IdentifiableMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.json.mixins.KeyMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.json.mixins.MultiLanguagePropertyMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.json.mixins.OperationMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.json.mixins.OperationVariableMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.json.mixins.PropertyMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.json.mixins.QualifierMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.json.mixins.RangeMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.json.mixins.ReferableMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.json.mixins.ReferenceMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.json.mixins.RelationshipElementMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.json.mixins.SpecificAssetIDMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.json.mixins.SubmodelElementCollectionMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.json.mixins.SubmodelElementListMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.json.mixins.ValueReferencePairMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.AdministrativeInformationMixin",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.AnnotatedRelationshipElementMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.AssetAdministrationShellMixin",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.AssetInformationMixin",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.ConceptDescriptionMixin",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.DataSpecificationIec61360Mixin",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.EmbeddedDataSpecificationMixin",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.EntityMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.EnvironmentMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.ExtensionMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.HasDataSpecificationMixin",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.HasExtensionsMixin",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.HasSemanticsMixin",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.KeyMixin",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.MultiLanguagePropertyMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.OperationMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.OperationVariableMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.PropertyMixin",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.QualifiableMixin",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.QualifierMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.ReferableMixin",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.ReferenceMixin",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.ResourceMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.SpecificAssetIDMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.SubmodelElementCollectionMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.SubmodelElementListMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.SubmodelElementMixin",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.SubmodelMixin",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.ValueListMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.mixins.ValueReferencePairMixin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.serialization.EmbeddedDataSpecificationSerializer",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.serialization.LangStringsDefinitionTypeIec61360Serializer",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.serialization.LangStringsNameTypeSerializer",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.serialization.LangStringsPreferredNameTypeIec61360Serializer",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.serialization.LangStringsShortNameTypeIec61360Serializer",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.serialization.LangStringsTextTypeSerializer",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.dataformat.xml.serialization.SubmodelElementsSerializer",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.AASSubmodelElements",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.AbstractLangString",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.AdministrativeInformation",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.AnnotatedRelationshipElement",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.AssetAdministrationShell",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.AssetInformation",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.AssetKind",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.BasicEventElement",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.Blob",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.Capability",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.ConceptDescription",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.DataElement",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.DataSpecificationContent",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.DataSpecificationIec61360",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.DataTypeDefXSD",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.DataTypeIec61360",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.Direction",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.EmbeddedDataSpecification",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.Entity",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.EntityType",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.Environment",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.EventElement",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.EventPayload",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.Extension",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.File",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.HasDataSpecification",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.HasExtensions",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.HasKind",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.HasSemantics",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.Identifiable",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.Key",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.KeyTypes",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.LangStringDefinitionTypeIec61360",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.LangStringNameType",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.LangStringPreferredNameTypeIec61360",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.LangStringShortNameTypeIec61360",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.LangStringTextType",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.LevelType",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.ModellingKind",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.MultiLanguageProperty",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.Operation",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.OperationVariable",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.Property",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.Qualifiable",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.Qualifier",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.QualifierKind",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.Range",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.Referable",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.Reference",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.ReferenceElement",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.ReferenceTypes",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.RelationshipElement",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.Resource",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.SpecificAssetID",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.StateOfEvent",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.Submodel",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.SubmodelElement",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.SubmodelElementCollection",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.SubmodelElementList",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.ValueList",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.ValueReferencePair",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultAdministrativeInformation",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultAdministrativeInformation$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultAnnotatedRelationshipElement",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultAnnotatedRelationshipElement$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultAssetAdministrationShell",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultAssetAdministrationShell$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultAssetInformation",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultAssetInformation$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultBasicEventElement",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultBasicEventElement$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultBlob",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultBlob$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultCapability",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultCapability$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultConceptDescription",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultConceptDescription$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultDataSpecificationIec61360",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultDataSpecificationIec61360$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultEmbeddedDataSpecification",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultEmbeddedDataSpecification$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultEntity",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultEntity$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultEnvironment",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultEnvironment$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultEventPayload",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultEventPayload$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultExtension",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultExtension$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultFile",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultFile$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultKey",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultKey$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultLangStringDefinitionTypeIec61360",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultLangStringDefinitionTypeIec61360$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultLangStringNameType",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultLangStringNameType$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultLangStringPreferredNameTypeIec61360",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultLangStringPreferredNameTypeIec61360$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultLangStringShortNameTypeIec61360",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultLangStringShortNameTypeIec61360$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultLangStringTextType",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultLangStringTextType$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultLevelType",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultLevelType$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultMultiLanguageProperty",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultMultiLanguageProperty$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultOperation",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultOperation$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultOperationVariable",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultOperationVariable$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultProperty",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultProperty$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultQualifier",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultQualifier$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultRange",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultRange$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultReference",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultReference$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultReferenceElement",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultReferenceElement$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultRelationshipElement",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultRelationshipElement$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultResource",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultResource$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultSpecificAssetID",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultSpecificAssetID$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultSubmodel",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultSubmodel$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultSubmodelElementCollection",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultSubmodelElementCollection$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultSubmodelElementList",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultSubmodelElementList$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultValueList",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultValueList$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultValueReferencePair",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.digitaltwin.aas4j.v3.model.impl.DefaultValueReferencePair$Builder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.ame.Application",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.ame.Application$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.ame.api.FileHandlingController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.ame.api.GenerateController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.ame.api.ModelController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.ame.api.PackageController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.ame.config.ApplicationConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.ame.config.ApplicationConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.ame.config.ApplicationConfig$$SpringCGLIB$$1",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.ame.config.ApplicationConfig$$SpringCGLIB$$2",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.ame.config.ApplicationSettings",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.ame.config.SecurityConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.ame.config.SecurityConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.ame.config.SecurityConfig$$SpringCGLIB$$1",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.ame.config.SecurityConfig$$SpringCGLIB$$2",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.ame.exceptions.ResponseExceptionHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.ame.model.FileProcessingResult",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.ame.model.NamespaceFileCollection",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.ame.model.VersionedNamespaceFiles",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.ame.repository.ModelResolverRepository",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.ame.repository.strategy.LocalFolderResolverStrategy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.ame.repository.strategy.ModelResolverStrategy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.ame.services.FileHandlingService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.ame.services.GenerateService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.ame.services.ModelService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.ame.services.PackageService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.ame.validation.model.ViolationReport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.aspectmodel.generator.AspectModelHelper",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.aspectmodel.generator.I18nLanguageBundle",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.aspectmodel.resolver.services.VersionedModel",
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.aspectmodel.validation.services.AspectModelValidator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.characteristic.Quantifiable",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.characteristic.impl.DefaultQuantifiable",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.metamodel.Aspect",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.metamodel.Characteristic",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.metamodel.HasProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.metamodel.ModelElement",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.metamodel.NamedElement",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.metamodel.Property",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.metamodel.Scalar",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.metamodel.StructureElement",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.metamodel.Type",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.metamodel.Unit",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.metamodel.impl.DefaultAspect",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.metamodel.impl.DefaultCharacteristic",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.metamodel.impl.DefaultProperty",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.metamodel.impl.DefaultScalar",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.metamodel.impl.DefaultUnit",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.metamodel.impl.ModelElementImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.metamodel.loader.DefaultPropertyWrapper",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.eclipse.esmf.samm.KnownVersion",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.graalvm.nativeimage.ImageInfo",
    "allDeclaredMethods": true
  },
  {
    "name": "org.graalvm.nativeimage.Platforms",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.graphper.api.LineAttrs",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.graphper.api.NodeAttrs",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.slf4j.Logger",
    "allDeclaredMethods": true
  },
  {
    "name": "org.slf4j.bridge.SLF4JBridgeHandler",
    "allDeclaredMethods": true
  },
  {
    "name": "org.slf4j.spi.LocationAwareLogger",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.framework.AopInfrastructureBean",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.framework.ProxyConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.framework.ProxyProcessorSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.aot.hint.annotation.Reflective",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.Aware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanClassLoaderAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanFactoryAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanNameAware",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.DisposableBean",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.InitializingBean",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.SmartInitializingSingleton",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.Autowired",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.Qualifier",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.aot.BeanFactoryInitializationAotProcessor",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.aot.BeanRegistrationAotProcessor",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanFactoryPostProcessor",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanPostProcessor",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.support.NullBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.xml.XmlBeanDefinitionReader",
    "allPublicFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.ClearCachesApplicationListener",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.SpringApplication",
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.SpringBootConfiguration",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfiguration",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationExcludeFilter",
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackage",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureAfter",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureBefore",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureOrder",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.EnableAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.SpringBootApplication",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector",
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheCondition",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnBean",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnResource",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnResourceCondition",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.SearchStrategy"
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration$StandardGsonBuilderCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonBuilderCustomizer",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration$JacksonAndJsonbUnavailableCondition",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration$PreferGsonOrJacksonAndJsonbUnavailableCondition",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConverters",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$HttpMessageConvertersAutoConfigurationRuntimeHints",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2XmlHttpMessageConverterConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JsonbHttpMessageConvertersConfiguration",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.ConditionalOnDefaultWebSecurity",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.DefaultWebSecurityCondition",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityDataConfiguration",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration$ReactiveUserDetailsServiceCondition",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$WebSecurityEnablerConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.R2dbcInitializationConfiguration",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration$SqlInitializationModeCondition",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.ValidatorAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebResourcesRuntimeHints",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration$NotReactiveWebApplicationCondition",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.format.WebConversionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ConditionalOnMissingFilterBean",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DefaultDispatcherServletCondition",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationCondition",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedJetty",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorTemplateMissingCondition",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$StaticView",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailability",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailabilityBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.FileEncodingApplicationListener",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.TypeExcludeFilter",
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties",
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationListener",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLoader",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.event.EventPublishingRunListener",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.logging.LoggingApplicationListener",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.BoundConfigurationProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationProperties",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$Factory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.DeprecatedConfigurationProperty",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.EnableConfigurationProperties",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.NestedConfigurationProperty",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.bind.Name",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.bind.Nested",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.env.PropertiesPropertySourceLoader",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.env.YamlPropertySourceLoader",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jackson.JsonComponentModule",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModule",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModuleEntries",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.loader.LaunchedURLClassLoader",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.logging.logback.ColorConverter",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer",
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.task.TaskExecutorBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.task.TaskSchedulerBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.client.RestTemplateBuilder"
  },
  {
    "name": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.ConfigurableWebServerFactory",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistrar",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizer",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.AbstractFilterRegistrationBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean$1",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.DynamicRegistrationBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.FilterRegistrationBean"
  },
  {
    "name": "org.springframework.boot.web.servlet.RegistrationBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.ServletContextInitializer",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.ServletRegistrationBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.error.DefaultErrorAttributes",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.error.ErrorAttributes",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.error.ErrorController",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedFilter",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedFormContentFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Encoding",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.ServletWebServerFactory",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cache.Cache",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cache.CacheManager",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cache.interceptor.CacheAspectSupport",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationContext",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationContextAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationEventPublisherAware",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationListener",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationStartupAware",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.EmbeddedValueResolverAware",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.EnvironmentAware",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.LifecycleProcessor",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.MessageSourceAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.ResourceLoaderAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.AnnotationScopeMetadataResolver",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Bean",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ComponentScan",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ComponentScan$Filter",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Conditional",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Configuration",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ConfigurationClassPostProcessor",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.DependsOn",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Import",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ImportAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ImportRuntimeHints",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Lazy",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Primary",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.PropertySource",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Role",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Scope",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.event.DefaultEventListenerFactory",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.event.EventListenerMethodProcessor",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.support.ApplicationObjectSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.support.DefaultLifecycleProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.support.PropertySourcesPlaceholderConfigurer",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.Ordered",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.PriorityOrdered",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.annotation.AliasFor",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.annotation.Order",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.convert.support.ConfigurableConversionService",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.convert.support.GenericConversionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.env.EnvironmentCapable",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.task.AsyncListenableTaskExecutor",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.task.AsyncTaskExecutor",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.type.classreading.MetadataReaderFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.format.FormatterRegistry",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.format.support.DefaultFormattingConversionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.format.support.FormattingConversionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.ReactiveHttpInputMessage",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.codec.CodecConfigurer",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.codec.multipart.DefaultPartHttpMessageReader",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.AbstractGenericHttpMessageConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.AbstractHttpMessageConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.GenericHttpMessageConverter",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.HttpMessageConverter",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.StringHttpMessageConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.GsonHttpMessageConverter",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.xml.MappingJackson2XmlHttpMessageConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.server.reactive.HttpHandler",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.jmx.export.MBeanExporter",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.SchedulingTaskExecutor",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.concurrent.CustomizableThreadFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.concurrent.ExecutorConfigurationSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.access.expression.AbstractSecurityExpressionHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.access.expression.SecurityExpressionHandler",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AnonymousAuthenticationProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationEventPublisher",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationManager",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationManagerResolver",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationProvider",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.DefaultAuthenticationEventPublisher",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.ProviderManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.ReactiveAuthenticationManager",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureBadCredentialsEvent",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureCredentialsExpiredEvent",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureDisabledEvent",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureExpiredEvent",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureLockedEvent",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureProviderNotFoundEvent",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureProxyUntrustedEvent",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureServiceExceptionEvent",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authorization.AuthorizationManager",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.AbstractSecurityBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.ObjectPostProcessor",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.SecurityBuilder",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.SecurityConfigurer",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.ProviderManagerBuilder",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$DefaultPasswordEncoderAuthenticationManagerBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.EnableGlobalAuthentication",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.GlobalAuthenticationConfigurerAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.HttpSecurityBuilder",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.builders.HttpSecurity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.builders.WebSecurity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.EnableWebSecurity",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.OAuth2ImportSelector",
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.SpringWebMvcImportSelector",
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.http.SessionCreationPolicy",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.context.DelegatingApplicationListener",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.core.userdetails.UserDetailsPasswordService",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.core.userdetails.UserDetailsService",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.provisioning.InMemoryUserDetailsManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.provisioning.UserDetailsManager",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.DefaultSecurityFilterChain",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.FilterChainProxy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.SecurityFilterChain",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.access.ExceptionTranslationFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.access.RequestMatcherDelegatingWebInvocationPrivilegeEvaluator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.access.WebInvocationPrivilegeEvaluator",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.access.intercept.AuthorizationFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.access.intercept.RequestMatcherDelegatingAuthorizationManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.authentication.logout.LogoutFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.authentication.logout.LogoutHandler",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.authentication.logout.LogoutSuccessEventPublishingLogoutHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.authentication.session.AbstractSessionFixationProtectionStrategy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.authentication.session.SessionAuthenticationStrategy",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.context.SecurityContextHolderFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.header.HeaderWriterFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.savedrequest.RequestCacheAwareFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.servlet.support.csrf.CsrfRequestDataValueProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.servlet.util.matcher.MvcRequestMatcher",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.util.matcher.RequestMatcher",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.util.matcher.RequestVariablesExtractor",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Component",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Controller",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Indexed",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Service",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.util.AntPathMatcher",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.util.CustomizableThreadCreator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.util.PathMatcher",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.validation.SmartValidator",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.accept.ContentNegotiationManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.accept.ContentNegotiationStrategy",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.accept.MediaTypeFileExtensionResolver",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ControllerAdvice",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.DeleteMapping",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ExceptionHandler",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.GetMapping",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.Mapping",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.PostMapping",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestBody",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestHeader",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestMapping",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestParam",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ResponseBody",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RestController",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.client.RestTemplate",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.context.ConfigurableWebApplicationContext",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.context.ServletContextAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.context.request.RequestContextListener",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.context.support.GenericWebApplicationContext",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.context.support.WebApplicationObjectSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.cors.CorsConfigurationSource",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.filter.CharacterEncodingFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.filter.DelegatingFilterProxy",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.filter.FormContentFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.filter.GenericFilterBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.filter.OncePerRequestFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.filter.RequestContextFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.method.annotation.ExceptionHandlerMethodResolver",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.method.support.CompositeUriComponentsContributor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.method.support.UriComponentsContributor",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.multipart.MultipartFile",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.multipart.MultipartResolver",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.multipart.support.StandardServletMultipartResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.DispatcherServlet",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.FlashMapManager",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.FrameworkServlet",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerAdapter",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerExceptionResolver",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerMapping",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HttpServletBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.LocaleResolver",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.RequestToViewNameTranslator",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.ThemeResolver",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.View",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.ViewResolver",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.function.support.HandlerFunctionAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.function.support.RouterFunctionMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$EmptyHandler",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractUrlHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.HandlerExceptionResolverComposite",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.HandlerMappingIntrospector",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.MatchableHandlerMapping",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.SimpleUrlHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.i18n.AbstractLocaleResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.resource.ResourceUrlProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.support.AbstractFlashMapManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.support.RequestDataValueProcessor",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.support.SessionFlashMapManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.support.WebContentGenerator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.theme.AbstractThemeResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.theme.FixedThemeResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.view.AbstractCachingViewResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.view.BeanNameViewResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.view.ContentNegotiatingViewResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.view.InternalResourceViewResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.view.UrlBasedViewResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.view.ViewResolverComposite",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.util.UrlPathHelper",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.util.pattern.PathPatternParser",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "sun.awt.Win32FontManager",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.misc.Unsafe",
    "fields": [
      {
        "name": "theUnsafe"
      }
    ],
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.provider.DRBG",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.provider.DSA$SHA224withDSA",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.provider.DSA$SHA256withDSA",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.provider.JavaKeyStore$JKS",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.provider.MD5",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.provider.SHA",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.provider.SHA2$SHA224",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.provider.SHA2$SHA256",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.provider.SHA5$SHA384",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.provider.SHA5$SHA512",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.provider.X509Factory",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.rsa.PSSParameters",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.rsa.RSAKeyFactory$Legacy",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.rsa.RSAPSSSignature",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.rsa.RSASignature$SHA224withRSA",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.ssl.KeyManagerFactoryImpl$SunX509",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.ssl.SSLContextImpl$DefaultSSLContext",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.x509.AuthorityInfoAccessExtension",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.x509.AuthorityKeyIdentifierExtension",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.x509.BasicConstraintsExtension",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.x509.CRLDistributionPointsExtension",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.x509.CertificatePoliciesExtension",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.x509.ExtendedKeyUsageExtension",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.x509.IssuerAlternativeNameExtension",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.x509.KeyUsageExtension",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.x509.NetscapeCertTypeExtension",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.x509.PrivateKeyUsageExtension",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.x509.SubjectAlternativeNameExtension",
    "allDeclaredMethods": true
  },
  {
    "name": "sun.security.x509.SubjectKeyIdentifierExtension",
    "allDeclaredMethods": true
  },
  {
    "name": "void",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  }
]
