<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2023 Robert Bosch Manufacturing Solutions GmbH, Germany. All rights reserved.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.eclipse.esmf</groupId>
        <artifactId>aspect-model-editor-parent</artifactId>
        <version>DEV-SNAPSHOT</version>
    </parent>

    <artifactId>aspect-model-editor-runtime</artifactId>
    <name>ESMF Aspect Model Editor Runtime</name>

    <properties>
        <main.class>org.eclipse.esmf.ame.Application</main.class>
    </properties>

    <dependencies>
        <!-- Multi module dependencies -->
        <dependency>
            <groupId>org.eclipse.esmf</groupId>
            <artifactId>aspect-model-editor-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.esmf</groupId>
            <artifactId>aspect-model-editor-web-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.esmf</groupId>
            <artifactId>aspect-model-editor-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.esmf</groupId>
            <artifactId>aspect-model-editor-repository</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.esmf</groupId>
            <artifactId>aspect-model-editor-migrator</artifactId>
        </dependency>

        <!-- Third party dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.esmf</groupId>
            <artifactId>esmf-aspect-model-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.marschall</groupId>
            <artifactId>memoryfilesystem</artifactId>
        </dependency>

        <!-- Third party testing dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <configuration>
                    <mainClass>${main.class}</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>native-image</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <!-- Generate admin-shell reflection config -->
                            <execution>
                                <id>generate-admin-shell-reflection-config</id>
                                <phase>process-classes</phase>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                                <configuration>
                                    <!-- The main class of your build-time scanning code -->
                                    <mainClass>org.eclipse.esmf.ame.buildtime.Aas4jClassSetup</mainClass>
                                    <!-- Pass the properties file as a commandline param -->
                                    <commandlineArgs>${project.build.outputDirectory}/adminshell.properties
                                    </commandlineArgs>
                                    <cleanupDaemonThreads>false</cleanupDaemonThreads>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.graalvm.buildtools</groupId>
                        <artifactId>native-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <executions>
                            <execution>
                                <id>add-reachability-metadata</id>
                                <goals>
                                    <goal>add-reachability-metadata</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>build-native</id>
                                <goals>
                                    <goal>compile-no-fork</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                        <configuration>
                            <mainClass>${main.class}</mainClass>
                            <imageName>ame-backend-${project.version}-${os.platform}</imageName>
                            <verbose>true</verbose>
                            <buildArgs>
                                <buildArg>-Dspring.graal.remove-unused-autoconfig=true</buildArg>
                                <buildArg>-Dspring.graal.remove-yaml-support=true</buildArg>
                                <buildArg>--no-fallback</buildArg>
                                <buildArg>--report-unsupported-elements-at-runtime</buildArg>
                                <buildArg>
                                    --initialize-at-build-time=org.slf4j.LoggerFactory,ch.qos.logback,guru.nidi.graphviz.attribute.,org.apache.velocity.,org.apache.poi.util.LocaleUtil
                                </buildArg>
                                <buildArg>-J-Xmx8G</buildArg>
                                <buildArg>-H:+ReportExceptionStackTraces</buildArg>
                                <buildArg>
                                    -H:ReflectionConfigurationFiles=${project.basedir}/.graalvm/reflect-config.json
                                </buildArg>
                                <buildArg>
                                    -H:ResourceConfigurationFiles=${project.basedir}/.graalvm/resource-config.json
                                </buildArg>
                            </buildArgs>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>process-test-aot</id>
                                <goals>
                                    <goal>process-test-aot</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>process-aot</id>
                                <goals>
                                    <goal>process-aot</goal>
                                </goals>
                            </execution>
                            <execution>
                                <goals>
                                    <goal>repackage</goal>
                                    <goal>build-info</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <mainClass>${main.class}</mainClass>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>dependencies-for-integration-tests</id>
            <build>
                <plugins>
                    <!-- Make sure newman is available -->
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>install-node-and-npm</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>install-node-and-npm</goal>
                                </goals>
                                <configuration>
                                    <nodeVersion>v${node-version}</nodeVersion>
                                    <npmVersion>${npm-version}</npmVersion>
                                    <installDirectory>${project.build.directory}</installDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>install-newman</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>${project.build.directory}</workingDirectory>
                                    <arguments>install . newman@${newman-version}</arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>install-newman-reports</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>${project.build.directory}</workingDirectory>
                                    <arguments>install newman-reporter-htmlextra</arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Copy Postman files into build directory.
                                       This is required so that the target URL may be dynamically
                                       replaced within the Postman environment. -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.outputDirectory}/${postman.directory}
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${postman.directory}</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>port-allocator-maven-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>classworlds</groupId>
                                <artifactId>classworlds</artifactId>
                                <version>${classworlds-version}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>allocate-ports</goal>
                                </goals>
                                <configuration>
                                    <ports>
                                        <port>
                                            <name>integration-test-port</name>
                                        </port>
                                    </ports>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <!-- Adjust Postman environment target URL -->
                            <execution>
                                <id>adjust-postman-target-url</id>
                                <phase>pre-integration-test</phase>
                                <configuration>
                                    <target>
                                        <replaceregexp
                                                file="${project.build.outputDirectory}/${postman.directory}/${postman.test.environment}"
                                                match="9091" replace="${integration-test-port}" byline="true"/>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>start-windows-native-image-for-integration-tests</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.bazaarvoice.maven.plugins</groupId>
                        <artifactId>process-exec-maven-plugin</artifactId>
                        <executions>
                            <!--Start process-->
                            <execution>
                                <id>start-native-image-process</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <workingDir>${project.build.directory}</workingDir>
                                    <arguments>
                                        <argument>cmd</argument>
                                        <argument>/C</argument>
                                        <argument>ame-backend-${project.version}-${os.platform}</argument>
                                        <argument>-Dserver.port=${integration-test-port}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <!--Stop Process-->
                            <execution>
                                <id>stop-native-image-process</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop-all</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>start-unix-native-image-for-integration-tests</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>Add execution right´s on native-image</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>chmod</executable>
                                    <arguments>
                                        <argument>755</argument>
                                        <argument>
                                            ${project.build.directory}/ame-backend-${project.version}-${os.platform}
                                        </argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.bazaarvoice.maven.plugins</groupId>
                        <artifactId>process-exec-maven-plugin</artifactId>
                        <executions>
                            <!--Start process-->
                            <execution>
                                <id>start-native-image-process</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <workingDir>${project.build.directory}</workingDir>
                                    <arguments>
                                        <argument>./ame-backend-${project.version}-${os.platform}</argument>
                                        <argument>-Dserver.port=${integration-test-port}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <!--Stop Process-->
                            <execution>
                                <id>stop-native-image-process</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop-all</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>run-postman-integration-tests</id>
            <build>
                <plugins>
                    <!-- Run Postman collections against deployed integration instance -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <inherited>false</inherited>
                        <executions>
                            <execution>
                                <id>run-postman-integration-tests</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${node.path}</executable>
                                    <commandlineArgs>
                                        ${project.build.directory}/node_modules/newman/bin/newman.js
                                        run
                                        ${project.build.outputDirectory}/${postman.directory}/${postman.test.collection}
                                        -e
                                        ${project.build.outputDirectory}/${postman.directory}/${postman.test.environment}
                                        -n 1
                                        --timeout-request 60000
                                        --delay-request 1000
                                        --insecure
                                        -r cli,htmlextra
                                        --reporter-htmlextra-title "${project.name} ${project.version}"
                                        --reporter-htmlextra-export
                                        ${project.build.directory}/${testreports.directory}/${testreports.newman}
                                    </commandlineArgs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
