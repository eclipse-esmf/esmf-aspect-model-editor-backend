{
	"info": {
		"_postman_id": "60a84c95-6f04-4bea-86ee-17e70d30b603",
		"name": "AME.POSTMAN.RESOURCES",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "CreateAspectModel",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "NAMESPACE",
						"value": "io.aspectmodel:1.0.0",
						"type": "default"
					},
					{
						"key": "FILE-NAME",
						"value": "AspectDefault.ttl",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "@prefix samm: <urn:samm:org.eclipse.esmf.samm:meta-model:2.1.0#> .\r\n@prefix samm-c: <urn:samm:org.eclipse.esmf.samm:characteristic:2.1.0#> .\r\n@prefix samm-e: <urn:samm:org.eclipse.esmf.samm:entity:2.1.0#> .\r\n@prefix unit: <urn:samm:org.eclipse.esmf.samm:unit:2.1.0#> .\r\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\r\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\r\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\r\n@prefix : <urn:samm:io.aspectmodel:1.0.0#> .\r\n\r\n:AspectDefault a samm:Aspect ;\r\n    samm:properties (:property1) ;\r\n    samm:operations () .\r\n\r\n:property1 a samm:Property;\r\n    samm:characteristic :Characteristic1 .\r\n\r\n:Characteristic1 a samm:Characteristic ;\r\n    samm:dataType xsd:string .\r\n"
				},
				"url": {
					"raw": "http://localhost:{{port}}/ame/api/models",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"ame",
						"api",
						"models"
					]
				},
				"description": "Create a aspect model"
			},
			"response": []
		},
		{
			"name": "CreateLatestAspectModel",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "FILE-NAME",
						"value": "latest.ttl",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "@prefix samm: <urn:samm:org.eclipse.esmf.samm:meta-model:2.1.0#> .\r\n@prefix samm-c: <urn:samm:org.eclipse.esmf.samm:characteristic:2.1.0#> .\r\n@prefix samm-e: <urn:samm:org.eclipse.esmf.samm:entity:2.1.0#> .\r\n@prefix unit: <urn:samm:org.eclipse.esmf.samm:unit:2.1.0#> .\r\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\r\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\r\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\r\n@prefix : <urn:samm:io.aspectmodel:1.0.0#> .\r\n\r\n:AspectDefault a samm:Aspect ;\r\n    samm:properties (:property1) ;\r\n    samm:operations () .\r\n\r\n:property1 a samm:Property;\r\n    samm:characteristic :Characteristic1 .\r\n\r\n:Characteristic1 a samm:Characteristic ;\r\n    samm:dataType xsd:string .\r\n"
				},
				"url": {
					"raw": "http://localhost:{{port}}/ame/api/models",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"ame",
						"api",
						"models"
					]
				},
				"description": "Create a aspect model"
			},
			"response": []
		},
		{
			"name": "GetAspectModel",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(pm.response.text()).to.include(pm.variables.replaceIn(\"@prefix samm: <urn:samm:org.eclipse.esmf.samm:meta-model:{{currentSammVersion}}#>\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "NAMESPACE",
						"value": "io.aspectmodel:1.0.0",
						"type": "text"
					},
					{
						"key": "FILE-NAME",
						"value": "AspectDefault.ttl",
						"type": "default"
					}
				],
				"url": {
					"raw": "http://localhost:{{port}}/ame/api/models",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"ame",
						"api",
						"models"
					]
				},
				"description": "Get aspect model by urn"
			},
			"response": []
		},
		{
			"name": "GetLatestAspectModel",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "FILE-NAME",
						"value": "latest.ttl",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:{{port}}/ame/api/models",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"ame",
						"api",
						"models"
					]
				},
				"description": "Get aspect model by urn"
			},
			"response": []
		},
		{
			"name": "GetAllNamespaces",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    const expectedObject = {\r",
							"        \"io.aspectmodel:1.0.0\": [\r",
							"            \"AspectDefault.ttl\"\r",
							"        ]\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:{{port}}/ame/api/models/namespaces",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"ame",
						"api",
						"models",
						"namespaces"
					]
				}
			},
			"response": []
		},
		{
			"name": "MigrateAspectModel",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(pm.response.text()).to.include(pm.variables.replaceIn(\"@prefix samm: <urn:samm:org.eclipse.esmf.samm:meta-model:{{currentSammVersion}}#>\"));});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "@prefix samm: <urn:samm:org.eclipse.esmf.samm:meta-model:2.0.0#> .\n@prefix samm-c: <urn:samm:org.eclipse.esmf.samm:characteristic:2.0.0#> .\n@prefix samm-e: <urn:samm:org.eclipse.esmf.samm:entity:2.0.0#> .\n@prefix unit: <urn:samm:org.eclipse.esmf.samm:unit:2.0.0#> .\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n@prefix : <urn:samm:io.aspectmodel:1.0.0#> .\n\n:AspectDefault a samm:Aspect ;\n    samm:properties (:property1) ;\n    samm:operations () .\n\n:property1 a samm:Property;\n    samm:characteristic :Characteristic1 .\n\n:Characteristic1 a samm:Characteristic ."
				},
				"url": {
					"raw": "http://localhost:{{port}}/ame/api/models/migrate",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"ame",
						"api",
						"models",
						"migrate"
					]
				},
				"description": "Validte aspect model"
			},
			"response": []
		},
		{
			"name": "ValidateAspectModel",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(pm.response.json().violationErrors).to.have.lengthOf(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "@prefix samm: <urn:samm:org.eclipse.esmf.samm:meta-model:2.1.0#> .\r\n@prefix samm-c: <urn:samm:org.eclipse.esmf.samm:characteristic:2.1.0#> .\r\n@prefix samm-e: <urn:samm:org.eclipse.esmf.samm:entity:2.1.0#> .\r\n@prefix unit: <urn:samm:org.eclipse.esmf.samm:unit:2.1.0#> .\r\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\r\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\r\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\r\n@prefix : <urn:samm:io.aspectmodel:1.0.0#> .\r\n\r\n:AspectDefault a samm:Aspect ;\r\n    samm:properties (:property1) ;\r\n    samm:operations () .\r\n\r\n:property1 a samm:Property;\r\n    samm:characteristic :Characteristic1 .\r\n\r\n:Characteristic1 a samm:Characteristic ;\r\n    samm:dataType xsd:string .\r\n"
				},
				"url": {
					"raw": "http://localhost:{{port}}/ame/api/models/validate",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"ame",
						"api",
						"models",
						"validate"
					]
				},
				"description": "Validte aspect model"
			},
			"response": []
		},
		{
			"name": "ValidateAnInvalidSchematicAspectModel",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    // TODO revert this after fixed\r",
							"    // pm.expect(pm.response.json().violationErrors.length).to.eql(2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "@prefix samm: <urn:samm:org.eclipse.esmf.samm:meta-model:2.1.0#> .\r\n@prefix samm-c: <urn:samm:org.eclipse.esmf.samm:characteristic:2.1.0#> .\r\n@prefix samm-e: <urn:samm:org.eclipse.esmf.samm:entity:2.1.0#> .\r\n@prefix unit: <urn:samm:org.eclipse.esmf.samm:unit:2.1.0#> .\r\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\r\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\r\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\r\n@prefix : <urn:samm:io.aspectmodel:1.0.0#> .\r\n\r\n:DefaultAspect a samm:Aspect ;\r\n   samm:preferredName \"DefaultAspect\"@en ;\r\n   samm:description \"DefaultAspect Description\"@en ;\r\n   samm:properties ( :property1 ) ;\r\n   samm:operations ( ) .\r\n\r\n:property1 a samm:Property ;\r\n   samm:preferredName \"Property 1 \"@en ;\r\n   samm:description \"Property Description 1 \"@en ;\r\n   samm:characteristic :Characteristic1 .\r\n\r\n:Characteristic1 a samm:Characteristic ;\r\n   samm:preferredName \"Characteristic 1 \"@en ;\r\n   samm:description \"Characteristic Description 1 \"@en ;\r\n   samm:dataType xsd:string .\r\n\r\n:Characteristic1 a samm:Characteristic ;\r\n   samm:preferredName \"Characteristic 2 \"@en ;\r\n   samm:description \"Characteristic Description 2 \"@en ;\r\n   samm:dataType xsd:string ."
				},
				"url": {
					"raw": "http://localhost:{{port}}/ame/api/models/validate",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"ame",
						"api",
						"models",
						"validate"
					]
				},
				"description": "Validte aspect model"
			},
			"response": []
		},
		{
			"name": "ValidateAnInvalidSyntaxAspectModel",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(pm.response.json().violationErrors.length).to.eql(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "@prefix samm: <urn:samm:org.eclipse.esmf.samm:meta-model:2.1.0#> .\r\n@prefix samm-c: <urn:samm:org.eclipse.esmf.samm:characteristic:2.1.0#> .\r\n@prefix samm-e: <urn:samm:org.eclipse.esmf.samm:entity:2.1.0#> .\r\n@prefix unit: <urn:samm:org.eclipse.esmf.samm:unit:2.1.0#> .\r\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\r\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\r\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\r\n@prefix : <urn:samm:io.aspectmodel:1.0.0#> .\r\n\r\n:AspectDefault a samm:Aspect ;\r\n    samm:properties (:property1) ;\r\n    samm:operations () .\r\n\r\n:property1 a samm:Property;\r\n    samm:characteristic :Characteristic1\r\n\r\n:Characteristic1 a samm:Characteristic ;\r\n    samm:dataType xsd:string .\r\n"
				},
				"url": {
					"raw": "http://localhost:{{port}}/ame/api/models/validate",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"ame",
						"api",
						"models",
						"validate"
					]
				},
				"description": "Validte aspect model"
			},
			"response": []
		},
		{
			"name": "DeleteAspectModel",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "NAMESPACE",
						"value": "io.aspectmodel:1.0.0",
						"type": "text"
					},
					{
						"key": "FILE-NAME",
						"value": "AspectDefault.ttl",
						"type": "default"
					}
				],
				"url": {
					"raw": "http://localhost:{{port}}/ame/api/models",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"ame",
						"api",
						"models"
					]
				},
				"description": "Delete an aspect model by urn"
			},
			"response": []
		},
		{
			"name": "ValidateAspectModelWithTraits",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(pm.response.json().violationErrors).to.have.lengthOf(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "@prefix samm: <urn:samm:org.eclipse.esmf.samm:meta-model:2.1.0#> .\r\n@prefix samm-c: <urn:samm:org.eclipse.esmf.samm:characteristic:2.1.0#> .\r\n@prefix samm-e: <urn:samm:org.eclipse.esmf.samm:entity:2.1.0#> .\r\n@prefix unit: <urn:samm:org.eclipse.esmf.samm:unit:2.1.0#> .\r\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\r\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\r\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\r\n@prefix : <urn:samm:io.aspectmodel:1.0.0#> .\r\n\r\n:AspectWithUsedAndUnusedConstraint a samm:Aspect ;\r\n   samm:properties ( :testProperty ) ;\r\n   samm:operations ( ) .\r\n\r\n:testProperty a samm:Property ;\r\n   samm:characteristic :UsedTestTrait .\r\n\r\n:UsedTestTrait a samm-c:Trait ;\r\n   samm-c:constraint :UnusedTestConstraint ;\r\n   samm-c:baseCharacteristic samm-c:Text .\r\n\r\n:UnusedTestConstraint a samm-c:LengthConstraint ;\r\n   samm:preferredName \"Unused Test Constraint\"@en ;\r\n   samm:description \"Unused Test Constraint\"@en ;\r\n   samm:see <http://openmanufacturing.com> ;\r\n   samm:see <http://openmanufacturing.com/me> ;\r\n   samm-c:minValue \"5\"^^xsd:nonNegativeInteger ;\r\n   samm-c:maxValue \"10\"^^xsd:nonNegativeInteger ."
				},
				"url": {
					"raw": "http://localhost:{{port}}/ame/api/models/validate",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"ame",
						"api",
						"models",
						"validate"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetJsonSample",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response body is valid\", function () {\r",
							"    pm.expect(pm.response.json()['property1']).to.exist\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "@prefix samm: <urn:samm:org.eclipse.esmf.samm:meta-model:2.1.0#> .\r\n@prefix samm-c: <urn:samm:org.eclipse.esmf.samm:characteristic:2.1.0#> .\r\n@prefix samm-e: <urn:samm:org.eclipse.esmf.samm:entity:2.1.0#> .\r\n@prefix unit: <urn:samm:org.eclipse.esmf.samm:unit:2.1.0#> .\r\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\r\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\r\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\r\n@prefix : <urn:samm:io.aspectmodel:1.0.0#> .\r\n\r\n:AspectDefault a samm:Aspect ;\r\n    samm:properties (:property1) ;\r\n    samm:operations () .\r\n\r\n:property1 a samm:Property;\r\n    samm:characteristic :Characteristic1 .\r\n\r\n:Characteristic1 a samm:Characteristic ;\r\n    samm:dataType xsd:string .\r\n"
				},
				"url": {
					"raw": "http://localhost:{{port}}/ame/api/generate/json-sample",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"ame",
						"api",
						"generate",
						"json-sample"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetJsonSchema",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response body is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"components\"][\"schemas\"][\"urn_samm_io.aspectmodel_1.0.0_Characteristic1\"][\"type\"]).to.equal(\"string\");\r",
							"    pm.expect(pm.response.json()[\"properties\"][\"property1\"][\"$ref\"]).to.equal(\"#/components/schemas/urn_samm_io.aspectmodel_1.0.0_Characteristic1\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "@prefix samm: <urn:samm:org.eclipse.esmf.samm:meta-model:2.1.0#> .\r\n@prefix samm-c: <urn:samm:org.eclipse.esmf.samm:characteristic:2.1.0#> .\r\n@prefix samm-e: <urn:samm:org.eclipse.esmf.samm:entity:2.1.0#> .\r\n@prefix unit: <urn:samm:org.eclipse.esmf.samm:unit:2.1.0#> .\r\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\r\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\r\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\r\n@prefix : <urn:samm:io.aspectmodel:1.0.0#> .\r\n\r\n:AspectDefault a samm:Aspect ;\r\n    samm:properties (:property1) ;\r\n    samm:operations () .\r\n\r\n:property1 a samm:Property;\r\n    samm:characteristic :Characteristic1 .\r\n\r\n:Characteristic1 a samm:Characteristic ;\r\n    samm:dataType xsd:string .\r\n"
				},
				"url": {
					"raw": "http://localhost:{{port}}/ame/api/generate/json-schema",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"ame",
						"api",
						"generate",
						"json-schema"
					]
				}
			},
			"response": []
		},
		{
			"name": "GenerateJsonSchemaFromInvalidAspectModel",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(422);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "@prefix samm: <urn:samm:org.eclipse.esmf.samm:meta-model:2.1.0#> .\n@prefix samm-c: <urn:samm:org.eclipse.esmf.samm:characteristic:2.1.0#> .\n@prefix samm-e: <urn:samm:org.eclipse.esmf.samm:entity:2.1.0#> .\n@prefix unit: <urn:samm:org.eclipse.esmf.samm:unit:2.1.0#> .\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n@prefix : <urn:samm:io.aspectmodel:1.0.0#> .\n\n:AspectDefault a samm:Aspect ;\n    samm:properties (:property1) ;\n    samm:operations () .\n\n:property1 a samm:Property;\n    samm:characteristic :Characteristic1 .\n\n:Characteristic1 a samm:Characteristic ."
				},
				"url": {
					"raw": "http://localhost:{{port}}/ame/api/generate/json-schema",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"ame",
						"api",
						"generate",
						"json-schema"
					]
				}
			},
			"response": []
		},
		{
			"name": "GenerateJsonPayloadFromInvalidAspedtModel",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(422);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "@prefix samm: <urn:samm:org.eclipse.esmf.samm:meta-model:2.1.0#> .\n@prefix samm-c: <urn:samm:org.eclipse.esmf.samm:characteristic:2.1.0#> .\n@prefix samm-e: <urn:samm:org.eclipse.esmf.samm:entity:2.1.0#> .\n@prefix unit: <urn:samm:org.eclipse.esmf.samm:unit:2.1.0#> .\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n@prefix : <urn:samm:io.aspectmodel:1.0.0#> .\n\n:AspectDefault a samm:Aspect ;\n    samm:properties (:property1) ;\n    samm:operations () .\n\n:property1 a samm:Property;\n    samm:characteristic :Characteristic1 .\n\n:Characteristic1 a samm:Characteristic ."
				},
				"url": {
					"raw": "http://localhost:{{port}}/ame/api/generate/json-sample",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"ame",
						"api",
						"generate",
						"json-sample"
					]
				}
			},
			"response": []
		},
		{
			"name": "GenerateJsonOpenApiSpec",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response body is valid\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.openapi).to.equal(\"3.0.3\");\r",
							"    pm.expect(jsonData.info.title).to.equal(\"AspectDefault\");\r",
							"    pm.expect(jsonData.info.version).to.equal(\"v1.0.0\");\r",
							"    pm.expect(jsonData.servers[0].url).to.equal(\"http://www.test.com/api/v1.0.0\");\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "@prefix samm: <urn:samm:org.eclipse.esmf.samm:meta-model:2.1.0#> .\r\n@prefix samm-c: <urn:samm:org.eclipse.esmf.samm:characteristic:2.1.0#> .\r\n@prefix samm-e: <urn:samm:org.eclipse.esmf.samm:entity:2.1.0#> .\r\n@prefix unit: <urn:samm:org.eclipse.esmf.samm:unit:2.1.0#> .\r\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\r\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\r\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\r\n@prefix : <urn:samm:io.aspectmodel:1.0.0#> .\r\n\r\n:AspectDefault a samm:Aspect ;\r\n    samm:properties (:property1) ;\r\n    samm:operations () .\r\n\r\n:property1 a samm:Property;\r\n    samm:characteristic :Characteristic1 .\r\n\r\n:Characteristic1 a samm:Characteristic ;\r\n    samm:dataType xsd:string .\r\n"
				},
				"url": {
					"raw": "http://localhost:{{port}}/ame/api/generate/open-api-spec?output=json&baseUrl=http://www.test.com&includeQueryApi=true&useSemanticVersion=true&pagingOption=NO_PAGING",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"ame",
						"api",
						"generate",
						"open-api-spec"
					],
					"query": [
						{
							"key": "output",
							"value": "json"
						},
						{
							"key": "baseUrl",
							"value": "http://www.test.com"
						},
						{
							"key": "includeQueryApi",
							"value": "true"
						},
						{
							"key": "useSemanticVersion",
							"value": "true"
						},
						{
							"key": "pagingOption",
							"value": "NO_PAGING"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GenerateYamlOpenApiSpec",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response body is valid\", function () {\r",
							"    const jsonData = pm.response.text();\r",
							"    pm.expect(jsonData).to.include(\"openapi: 3.0.3\");\r",
							"    pm.expect(jsonData).to.include(\"title: AspectDefault\");\r",
							"    pm.expect(jsonData).to.include(\"version: v1\");\r",
							"    pm.expect(jsonData).to.include(\"url: http://www.test.com/api/v1\");\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "@prefix samm: <urn:samm:org.eclipse.esmf.samm:meta-model:2.1.0#> .\r\n@prefix samm-c: <urn:samm:org.eclipse.esmf.samm:characteristic:2.1.0#> .\r\n@prefix samm-e: <urn:samm:org.eclipse.esmf.samm:entity:2.1.0#> .\r\n@prefix unit: <urn:samm:org.eclipse.esmf.samm:unit:2.1.0#> .\r\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\r\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\r\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\r\n@prefix : <urn:samm:io.aspectmodel:1.0.0#> .\r\n\r\n:AspectDefault a samm:Aspect ;\r\n    samm:properties (:property1) ;\r\n    samm:operations () .\r\n\r\n:property1 a samm:Property;\r\n    samm:characteristic :Characteristic1 .\r\n\r\n:Characteristic1 a samm:Characteristic ;\r\n    samm:dataType xsd:string .\r\n"
				},
				"url": {
					"raw": "http://localhost:{{port}}/ame/api/generate/open-api-spec?output=yaml&baseUrl=http://www.test.com&includeQueryApi=false&useSemanticVersion=false&pagingOption=OFFSET_BASED_PAGING",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"ame",
						"api",
						"generate",
						"open-api-spec"
					],
					"query": [
						{
							"key": "output",
							"value": "yaml"
						},
						{
							"key": "baseUrl",
							"value": "http://www.test.com"
						},
						{
							"key": "includeQueryApi",
							"value": "false"
						},
						{
							"key": "useSemanticVersion",
							"value": "false"
						},
						{
							"key": "pagingOption",
							"value": "OFFSET_BASED_PAGING"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GenerateJsonOpenApiSpecFromInvalidAspectModel",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(422);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "@prefix samm: <urn:samm:org.eclipse.esmf.samm:meta-model:2.1.0#> .\r\n@prefix samm-c: <urn:samm:org.eclipse.esmf.samm:characteristic:2.1.0#> .\r\n@prefix samm-e: <urn:samm:org.eclipse.esmf.samm:entity:2.1.0#> .\r\n@prefix unit: <urn:samm:org.eclipse.esmf.samm:unit:2.1.0#> .\r\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\r\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\r\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\r\n@prefix : <urn:samm:io.aspectmodel:1.0.0#> .\r\n\r\n:AspectDefault a samm:Aspect ;\r\n    samm:properties (:property1) ;\r\n    samm:operations () .\r\n\r\n:property1 a samm:Property;\r\n    samm:characteristic :Characteristic1 .\r\n\r\n:Characteristic1 a samm:Characteristic .\r\n"
				},
				"url": {
					"raw": "http://localhost:{{port}}/ame/api/generate/open-api-spec?output=json&baseUrl=http://www.test.com&includeQueryApi=true&useSemanticVersion=true&pagingOption=NO_PAGING",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"ame",
						"api",
						"generate",
						"open-api-spec"
					],
					"query": [
						{
							"key": "output",
							"value": "json"
						},
						{
							"key": "baseUrl",
							"value": "http://www.test.com"
						},
						{
							"key": "includeQueryApi",
							"value": "true"
						},
						{
							"key": "useSemanticVersion",
							"value": "true"
						},
						{
							"key": "pagingOption",
							"value": "NO_PAGING"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GenerateYamlOpenApiSpecFromInvalidAspectModel",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(422);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "@prefix samm: <urn:samm:org.eclipse.esmf.samm:meta-model:2.1.0#> .\r\n@prefix samm-c: <urn:samm:org.eclipse.esmf.samm:characteristic:2.1.0#> .\r\n@prefix samm-e: <urn:samm:org.eclipse.esmf.samm:entity:2.1.0#> .\r\n@prefix unit: <urn:samm:org.eclipse.esmf.samm:unit:2.1.0#> .\r\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\r\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\r\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\r\n@prefix : <urn:samm:io.aspectmodel:1.0.0#> .\r\n\r\n:AspectDefault a samm:Aspect ;\r\n    samm:properties (:property1) ;\r\n    samm:operations () .\r\n\r\n:property1 a samm:Property;\r\n    samm:characteristic :Characteristic1 .\r\n\r\n:Characteristic1 a samm:Characteristic .\r\n"
				},
				"url": {
					"raw": "http://localhost:{{port}}/ame/api/generate/open-api-spec?output=yaml&baseUrl=http://www.test.com&includeQueryApi=true&useSemanticVersion=true&pagingOption=NO_PAGING",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{port}}",
					"path": [
						"ame",
						"api",
						"generate",
						"open-api-spec"
					],
					"query": [
						{
							"key": "output",
							"value": "yaml"
						},
						{
							"key": "baseUrl",
							"value": "http://www.test.com"
						},
						{
							"key": "includeQueryApi",
							"value": "true"
						},
						{
							"key": "useSemanticVersion",
							"value": "true"
						},
						{
							"key": "pagingOption",
							"value": "NO_PAGING"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host_address",
			"value": "http://localhost:9090/"
		},
		{
			"key": "urn",
			"value": "latest"
		}
	]
}